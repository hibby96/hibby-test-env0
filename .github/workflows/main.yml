name: Env0 Create Env
on:
  workflow_dispatch:
    inputs:
      projectName:
        description: 'Project Name to use to get the ID'
        required: true
  push:
    branches:
      - 'main'
      - 'releases/**'
jobs:
  create-env0-environment:
    runs-on: ubuntu-latest
    outputs:
      projectId: ${{ steps.get_project_id.outputs.projectId }}
    steps:
    - name: Get Project ID
      id: get_project_id
      run: |
        response=$(curl --request GET \
          --url 'https://api.env0.com/projects?organizationId=495ff223-396d-4354-b141-d6cac7560431' \
          --header 'accept: application/json' \
          --header 'content-type: application/json' \
          --user 'xu2c-3xcpgrhz6tn:Oqo-88iHus8WHoFRsVDZG-QJ2gBZbGKB')
        echo "API Response: $response"
        projectId=$(echo "$response" | jq -r '.[] | select(.name=="${{ github.event.inputs.projectName }}").id')
        echo "::set-output name=projectId::$projectId"

    - name: Create Env0 Environment
      if: steps.get_project_id.outputs.projectId != ''
      run: |
        curl --request POST \
             --url https://api.env0.com/environments/without-template \
             --header 'accept: application/json' \
             --header 'content-type: application/json' \
             --user xu2c-3xcpgrhz6tn:Oqo-88iHus8WHoFRsVDZG-QJ2gBZbGKB \
             --data '
        {
          "deployRequest": {
            "configurationChanges": {
              "type": 0
            },
            "ttl": {
              "type": "INFINITE"
            }
          },
          "ttl": {
            "type": "INFINITE"
          },
          "configurationChanges": {
            "type": 0
          },
          "repository": "github.com",
          "organizationId": "495ff223-396d-4354-b141-d6cac7560431",
          "name": "test-env",
          "projectId": "${{ steps.get_project_id.outputs.projectId }}"
        }'
